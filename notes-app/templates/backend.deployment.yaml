apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Chart.Name}}-backend
  labels:
    app: {{ .Chart.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Chart.Name}}-backend
      tier: backend
  template:
    metadata:
      labels:
        app: {{.Chart.Name}}-backend
        tier: backend
    spec:
      containers:
        - name: {{.Chart.Name}}-backend
          image: "{{.Values.backend.deployment.image.tag}}:{{.Values.backend.deployment.image.version}}"
          imagePullPolicy: "{{.Values.backend.deployment.image.pullPolicy}}"
          env:
            - name: PRODUCTION
              value: "{{.Values.backend.deployment.env.production}}"
            - name: DB_USER
              value: "{{.Values.postgresql.auth.username}}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{.Values.postgresql.auth.existingSecret}}"
                  key: "{{.Values.postgresql.auth.secretKeys.userPasswordKey}}"
            - name: DB_DRIVER
              value: "{{.Values.backend.deployment.env.dbDriver}}"
            - name: DB_HOST
              value: "{{.Values.backend.deployment.env.dbHost}}"
            - name: DB_PORT
              value: "{{.Values.backend.deployment.env.dbPort}}"
            - name: SINGLE_NODE
              value: "{{.Values.backend.deployment.env.singleNode}}"
            - name: DB_NAME
              value: {{.Values.postgresql.auth.database}}

          ports:
            - containerPort: {{.Values.backend.deployment.ports.containerPort}}
        # add live and readiness probes for Google cloud load balancer
        # https://cloud.google.com/kubernetes-engine/docs/how-to/container-health-checks
          readinessProbe:
            httpGet:
              path: "/version"
              port: {{.Values.backend.deployment.ports.containerPort}}
            initialDelaySeconds: 20
            timeoutSeconds: 20

      initContainers:
        - name: {{.Chart.Name}}-wait-for-postgresql
          image: busybox
          command: [ "sh", "-c", "until nc -z $DB_HOST $DB_PORT; do echo waiting for postgres; sleep 1; done" ]
          env:
            - name: DB_HOST
              value: "{{.Values.backend.deployment.env.dbHost}}"
            - name: DB_PORT
              value: "{{.Values.backend.deployment.env.dbPort}}"

