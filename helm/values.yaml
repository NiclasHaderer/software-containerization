secrets:
  db_user_password: super_secret
deployment:
  type: minikube # can be gce or minikube
pv:
  accessMode: ReadWriteOnce
  size: 1Gi
  # Will create it in /var/lib/docker/volumes/minikube/_data/lib/docker/volumes/
  hostPath: "postgres-data"
postgresql:
  commonLabels:
    app: notes-app

  fullnameOverride: notes-app-postgresql
  primary:
    podLabels:
      name: notes-app-postgresql
    persistence:
      existingClaim: notes-app-postgresql
  auth:
    enablePostgresUser: false
    username: u_notes
    database: notes
    existingSecret: pg-user-password  # name of the secret that contains the password
    secretKeys:
      userPasswordKey: user-password
backend:
  deployment:
    image:
      tag: gcr.io/containerisation/containerization-backend
      pullPolicy: Always
      version: latest # red or latest
      # repository: containerization-backend
      # pullPolicy: Never
    configName: backend-config
    config:
      production: true
      dbUser: u_notes
      dbDriver: postgresql+aiopg
      dbHost: notes-app-postgresql
      dbPort: 5432
      singleNode: true
    ports:
      containerPort: 8000
frontend:
  deployment:
    image:
      tag: gcr.io/containerisation/containerization-frontend
      pullPolicy: Always
      version: latest # red | latest
      # tag: containerization-frontend
      # pullPolicy: Never
    ports:
      containerPort: 80
ingress:
  host: k8.omes.app
  tlsSecretName: k8-omes-app-tls-production  # k8-omes-app-tls-production | k8-omes-app-tls-staging
networking:
  ingressSelectorName: app.kubernetes.io/instance
  ingressSelectorValue: ingress-nginx
certManagerNamespace: cert-manager
users:
  admin:
    - tbd
  auditor:
    - tbd
  crtManager:
    - tbd